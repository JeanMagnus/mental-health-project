import streamlit as st
from utils import load_data, aplicar_estilos

# Carregar estilos e dados
aplicar_estilos()
if 'df' not in st.session_state:
    df = load_data()
    st.session_state['df'] = df
else:
    df = st.session_state['df']


def pagina_inicial():
    """
    Esta fun√ß√£o cont√©m todo o conte√∫do da p√°gina inicial com o novo design e os textos originais.
    """

    # --- 1. SE√á√ÉO DE DESTAQUE (HERO SECTION) ---
    col_img, col_title = st.columns([1, 3], gap="large")
    with col_img:
        st.image("https://emojicdn.elk.sh/üß†?style=twitter", width=150)
    with col_title:
        st.title("Sa√∫de Mental no Setor de Tecnologia")
    
    st.divider()

    # --- 2. M√âTRICAS PRINCIPAIS (KPIs) ---
    total_participantes = df.shape[0]
    paises_cobertos = df['country'].nunique()
    media_idade = int(df['age'].median())

    col_kpi1, col_kpi2, col_kpi3 = st.columns(3)
    col_kpi1.metric("Total de Participantes", f"{total_participantes}")
    col_kpi2.metric("Pa√≠ses Cobertos", f"{paises_cobertos}")
    col_kpi3.metric("Idade M√©dia", f"{media_idade} anos")

    st.divider()
    
    # --- 3. TEXTO INTRODUT√ìRIO (TEXTO ORIGINAL RESTAURADO) ---
    st.markdown("""
    Neste projeto, ser√° utilizado o dataset <b>"Mental Health in Tech Survey"</b>, dispon√≠vel no Kaggle,
    que re√∫ne respostas de profissionais da √°rea de tecnologia sobre sa√∫de mental no ambiente de trabalho.
    A pesquisa foi organizada pela <b>OSMI (Open Sourcing Mental Illness)</b>, organiza√ß√£o que promove
    conscientiza√ß√£o sobre sa√∫de mental, especialmente em ambientes t√©cnicos.
    
    <br>
    
    A an√°lise desse tipo de dado √© extremamente relevante, pois a sa√∫de mental vem se tornando um tema central
    nas discuss√µes sobre qualidade de vida no trabalho. Identificar padr√µes, barreiras ao tratamento e rela√ß√µes
    com condi√ß√µes laborais pode ajudar empresas e profissionais a tomarem decis√µes mais conscientes e humanizadas.
    """, unsafe_allow_html=True)

    # --- 4. CARDS DE NAVEGA√á√ÉO (COM TEXTOS ORIGINAIS RESTAURADOS) ---
    st.subheader("Explore as p√°ginas ao lado para navegar entre:")

    col_card1, col_card2, col_card3 = st.columns(3, gap="large")

    with col_card1:
        with st.container(border=True, height=130):
            st.markdown("##### üìä Estat√≠sticas e visualiza√ß√µes gerais")
            st.caption("Leve-me para a p√°gina de An√°lise Geral.")

        with st.container(border=True, height=130):
            st.markdown("##### üë§ IA de Apoio (Classifica√ß√£o)")
            st.caption("Use nosso modelo para uma recomenda√ß√£o personalizada.")

    with col_card2:
        with st.container(border=True, height=130):
            st.markdown("##### üìà Compara√ß√µes por g√™nero, pa√≠s, idade e trabalho remoto")
            st.caption("Leve-me para a p√°gina de Compara√ß√µes.")
        
        with st.container(border=True, height=130):
            st.markdown("##### üß† Perfis (Clustering)")
            st.caption("Descubra as 'personas' de profissionais nos dados.")

    with col_card3:
        with st.container(border=True, height=130):
            st.markdown("##### üîó Correla√ß√µes entre fatores de apoio e tratamento")
            st.caption("Leve-me para a p√°gina de Correla√ß√µes.")
        

# L√≥gica de navega√ß√£o principal
pages = [
    st.Page(pagina_inicial, title="P√°gina Inicial", icon="üè†", default=True),
    st.Page("pages/Analise_Geral.py", title="An√°lise Geral", icon="üìä"),
    st.Page("pages/Comparacoes.py", title="Compara√ß√µes", icon="üìà"),
    st.Page("pages/Correlacoes.py", title="Correla√ß√µes", icon="üîó"),
    st.Page("pages/Classificacao.py", title="Classifica√ß√£o", icon="üë§"),
    st.Page("pages/Clustering.py", title="Perfis", icon="üë•"),
]

# Mensagem de boas-vindas na sidebar (TEXTO ORIGINAL RESTAURADO)
with st.sidebar:
    st.write("Bem vindo ao projeto de an√°lise de dados sobre sa√∫de mental no setor de tecnologia!")
    st.write("Selecione uma p√°gina no menu para come√ßar a explorar os dados.")

# Executa a navega√ß√£o
pg = st.navigation(pages)
pg.run()